@using DogApp.Web.Dto
@using DogApp.Web.Services.Interfaces
@inject ITrackService TrackService
@inject IItemService ItemService

@page "/"

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

<button @onclick="HENTMINEDATA">Get Data</button>

@if (tracks != null)
{
    <h2>Tracks</h2>
    @foreach (var track in tracks)
    {
        <div>
            <h3>Title @track.Name</h3>
        </div>
    }
}

@if (items != null)
{
    <h2>Items</h2>
    @foreach (var item in items)
    {
        <div>
            <h3>Title @item.Name</h3>
        </div>
    }
}

<h2>Create New Track</h2>
<form @onsubmit="CreateTrack">
    <input type="text" @bind="newTrack.Name" placeholder="Track Name" />
    <button type="submit">Create</button>
</form>

@code {
    public List<TrackDtoOnlyName> tracks = new();
    public List<ItemDto> items = new();
    public TrackDtoOnlyName newTrack = new TrackDtoOnlyName("");

    public async Task HENTMINEDATA()
    {
        tracks = await TrackService.GetAllTracks();
        items = await ItemService.GetAllItems();
    }

    public async Task CreateTrack()
    {
        
        
        await TrackService.CreateTrackAsync(newTrack);
        await HENTMINEDATA(); // Opdater listen over spor efter oprettelse
        //newTrack = new TrackDto(); // Nulstil formularen
    }
}
