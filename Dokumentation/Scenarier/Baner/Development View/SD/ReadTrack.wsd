@startuml SeBane

title \nSD\n  Read_Track
!theme Dracula from Dokumentation\Scenarier\Baner\Development View\DCD\


actor User
box "front"
participant "View" as UI
end box
box "backend"
participant "API" as Ap
participant "Track Service" as Ts
participant "Track Repository" as Tr
participant "DataContext" as Dc
end box
database "Database" as Db

$Message(User, UI, GetTrack, TrackID : int )

activate UI 
$Message(UI,Ap, HttpGet, GetTrack)
activate Ap
$Message(Ap,Ts, GetByIdAsync, TrackID : int)
activate Ts
$Message(Ts,Tr, GetTrackByIdAsync, TrackID : int)
activate Tr
$Message(Tr,Dc, GetByIdAsync, Id : int)
activate Dc
$Message(Dc,Db, , )
activate Db
$ReturnMessage(Dc,Db,ID not found, )
$ReturnMessage(Tr,Dc,Error, )
$ReturnMessage(Ts,Tr,Error, )
$ReturnMessage(Ap,Ts,Error, )
$ReturnMessage(UI,Ap,Error, )
$ReturnMessage(User,UI,Error,TrackID not found)
$ReturnMessage(Dc,Db,Confirmation,Track found)

deactivate Db
$ReturnMessage(Tr,Dc,Confirmation,Track found)

deactivate Dc
$ReturnMessage(Ts,Tr,Confirmation,Track found)

deactivate Tr

$ReturnMessage(Ap,Ts,Confirmation,Track found)

deactivate Ts
$Message(Ap,Ap, Add, new SimpleTrackDTO(track.Name))
$ReturnMessage(UI,Ap,Ok,trackDto)

deactivate Ap
$ReturnMessage(User,UI,Ok,Track)


@enduml